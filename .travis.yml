os:
  - linux
python:
  - 3.8
env:
  - CMOR_PYTHON_VERSION='3.6'
  - CMOR_PYTHON_VERSION='3.7'
  - CMOR_PYTHON_VERSION='3.8'
  - CMOR_PYTHON_VERSION='3.9'
services:
  - docker

sudo: false

before_install:
  - export MINICONDA_VERSION=3
  - if [[ $TRAVIS_OS_NAME == "linux" ]]; then export MINICONDA_OS="Linux"; fi
  - if [[ $TRAVIS_OS_NAME == "osx" ]]; then export MINICONDA_OS="MacOSX"; fi
  - wget https://repo.continuum.io/miniconda/Miniconda${MINICONDA_VERSION}-latest-${MINICONDA_OS}-x86_64.sh -O miniconda.sh; 
  - export PATH="$HOME/miniconda/bin:$PATH"
  - export UVCDAT_ANONYMOUS_LOG=no
  - bash miniconda.sh -b -p $HOME/miniconda
  - conda config --set always_yes yes --set changeps1 no
  - conda update -y -q conda
  - if [[ $TRAVIS_OS_NAME == "linux" ]]; then export CONDA_COMPILERS="gcc_linux-64 gfortran_linux-64"; fi
  - if [[ $TRAVIS_OS_NAME == "osx" ]]; then export CONDA_COMPILERS="clang_osx-64 gfortran_osx-64"; fi
  - conda create -q -n py${CMOR_PYTHON_VERSION} -c cdat/label/nightly -c conda-forge -c cdat six libuuid json-c udunits2 hdf5 openblas==0.3.6 libnetcdf=*=nompi_* netcdf4 numpy openssl lazy-object-proxy python=${CMOR_PYTHON_VERSION} $CONDA_COMPILERS testsrunner
  - source activate py${CMOR_PYTHON_VERSION}
install:
  - export PREFIX=$(python -c "import sys; print(sys.prefix)")
  - ln -s cmip6-cmor-tables/Tables Tables
  - if [[ $TRAVIS_OS_NAME == "linux" ]]; then export LDSHARED_FLAGS="-shared -pthread"; fi
  - if [[ $TRAVIS_OS_NAME == "osx" ]]; then export LDSHARED_FLAGS="-bundle -undefined dynamic_lookup"; fi
  - "./configure --prefix=$PREFIX --with-python --with-uuid=$PREFIX --with-json-c=$PREFIX --with-udunits2=$PREFIX
    --with-netcdf=$PREFIX  --enable-verbose-test"
  - make install

script:
  - make test
  - conda install -q -n py${CMOR_PYTHON_VERSION} -c cdat/label/nightly -c conda-forge cdms2
  - make test
  - export PYTHONPATH=Test/:$PYTHONPATH
  - python run_tests.py -v2 -n1 -H Test/test_python_CMIP6_CV*.py

after_failure:
  - ulimit -a
  - free -m
  - find CMIP6/
  - df -kh ./
  - ls -lR
  - cat ~/build.sh

after_success:
  - if [[ $TRAVIS_BRANCH == "master" && $TRAVIS_OS_NAME == "osx" ]]; then CMOR_RECIPE_DIR=recipes bash scripts/conda_upload.sh ${TRAVIS_BRANCH} ; fi
  - if [[ $TRAVIS_BRANCH == "master" && $TRAVIS_OS_NAME == "linux" ]]; then docker run -v `pwd`:/travis_home -e CONDA_UPLOAD_TOKEN=${CONDA_UPLOAD_TOKEN} -e CMOR_RECIPE_DIR=/travis_home/recipes -e CMOR_PYTHON_VERSION=${CMOR_PYTHON_VERSION} -a STDOUT -a STDERR centos:6.8 /travis_home/scripts/conda_upload.sh ${TRAVIS_BRANCH} ; fi
