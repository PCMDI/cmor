version: 2

checkout:
  post:
    - ./ci-support/checkout_merge_commit.sh
        
aliases:

  - &setup_miniconda
    name: setup_miniconda
    command: |
      mkdir -p workspace
      git clone -b validateNightly git@github.com:CDAT/cdat workspace/cdat
      ls workspace/cdat
      # following will install miniconda3 under $WORKDIR/miniconda/bin
      python workspace/cdat/scripts/install_miniconda.py -w $WORKDIR -p 'py3'
      
  - &create_conda_env
    name: create_conda_env
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       conda config --set always_yes yes --set changeps1 no
       conda update -y -q conda
       conda config --set anaconda_upload no
       conda create -q -n py2 -c cdat/label/nightly -c conda-forge ossuuid udunits2 hdf5 libnetcdf numpy gcc openssl cdms2 "python<3" 
       #conda create -q -n py3 -c conda-forge ossuuid udunits2 hdf5 libnetcdf numpy gcc "python>3"

  - &setup_cmor
    name: setup_cmor
    command: |
       echo "WE are in: "`pwd`
       export PATH=$WORKDIR/miniconda/bin:$PATH
       source activate py2
       export PREFIX=$(python -c "import sys; print sys.prefix")
       git clone https://github.com/PCMDI/cmip6-cmor-tables
       ln -s cmip6-cmor-tables/Tables Tables
       ./configure --prefix=$PREFIX --with-python --with-uuid=$PREFIX --with-udunits2=$PREFIX --with-netcdf=$PREFIX  --enable-verbose-test
       make install

  - &run_cmor_tests
    name: run_cmor_tests
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       export UVCDAT_ANONYMOUS_LOG=False
       source activate py2
       make test
  - &run_prepare_tests
    name: run_prepare_tests
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       export UVCDAT_ANONYMOUS_LOG=False
       source activate py2
       for file in `ls -1 Test/test_python_CMIP6_CV*.py`; do echo $file; python $file; mystatus=$?; if [[ "$mystatus" != "0" ]]; then return ${mystatus}; fi; done


jobs:
  macos_cmor:
    macos:
      xcode: "9.2.0"
    environment:
      WORKDIR: "workspace/test_macos_cmor"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *create_conda_env
      - run: *setup_cmor
      - run: *run_cmor_tests
      - run: *run_prepare_tests

  linux_cmor:
    machine:
      image: circleci/classic:latest
    environment:
      WORKDIR: "workspace/test_linux_cmor"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *create_conda_env
      - run: *setup_cmor
      - run: *run_cmor_tests
      - run: *run_prepare_tests

workflows:
  version: 2
  nightly:
    jobs:
      - macos_cmor
      - linux_cmor
